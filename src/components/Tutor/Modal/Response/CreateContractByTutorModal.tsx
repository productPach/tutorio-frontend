"use client";

import { useAppDispatch, useAppSelector } from "@/store/store";
import styles from "../Profil/Fio/Fio.module.css";
import buttonStyles from "../../../../app/tutor/button.module.css";
import componentStyles from "../Profil/Education/Education.module.css";
import {
  setIsModalCreateContractByTutor,
  setIsSheetCreateContractByTutor,
  setScrollY,
} from "@/store/features/modalSlice";
import { useChat } from "@/context/ChatContext";
import { createContract } from "@/store/features/contractSlice";
import { sendMessage } from "@/store/features/chatSlice";
import { unwrapResult } from "@reduxjs/toolkit";
import { useChatSocket } from "@/hooks/useChatSocket";
import { Spinner } from "@/components/Spinner/Spinner";
import { useState } from "react";

export const CreateContractByTutorModal = () => {
  const dispatch = useAppDispatch();
  const token = useAppSelector((state) => state.auth.token);
  const chat = useAppSelector((state) => state.chat.chat);
  const { loadChats } = useChat();
  const { sendMessageSocket } = useChatSocket(chat?.id ? chat.id : "");
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ª–æ–∞–¥–µ—Ä–∞
  const [isLoading, setIsLoading] = useState(false);

  const handleCreateContract = async () => {
    try {
      if (!token || !chat || !chat.orderId || !chat.tutorId) return;
      setIsLoading(true);
      await dispatch(
        createContract({
          token,
          payload: {
            orderId: chat.orderId,
            tutorId: chat.tutorId,
            selectedBy: "tutor",
          },
        })
      ).unwrap();

      const actionResult = await dispatch(
        sendMessage({
          chatId: chat.id,
          senderId: chat.tutorId,
          orderId: "–∫–∞–∫–æ–π-—Ç–æ –∞–π–¥–∏",
          themeOrder: "–∫–∞–∫–∞—è-—Ç–æ —Ç–µ–º–∞",
          text: `–†–µ–ø–µ—Ç–∏—Ç–æ—Ä —Å–æ–æ–±—â–∏–ª, —á—Ç–æ\u00A0–≤—ã –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å –æ\u00A0–∑–∞–Ω—è—Ç–∏–∏!\u00A0üéâ
–ñ–µ–ª–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–æ–≤! –ü–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤\u00A0‚Äî\u00A0—ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—É –∏\u00A0–¥—Ä—É–≥–∏–º —É—á–µ–Ω–∏–∫–∞–º\u00A0üôå`,
          token,
          type: "service",
          recipientRole: "student",
        })
      );

      const newMessage = unwrapResult(actionResult);
      // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–æ–∫–µ—Ç
      sendMessageSocket(newMessage); // –ü–µ—Ä–µ–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID

      await loadChats(); // –µ—Å–ª–∏ —Ç–µ–±–µ –Ω–∞–¥–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º–∏
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:", err);
    } finally {
      setIsLoading(false);
      dispatch(setIsModalCreateContractByTutor(false));
      dispatch(setIsSheetCreateContractByTutor(false));
      dispatch(setScrollY(0));
    }
  };

  return (
    <>
      <div className={styles.description2}>
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å —Å —É—á–µ–Ω–∏–∫–æ–º –ø–æ –∑–∞–∫–∞–∑—É.
        <br></br>
        <br></br>‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –æ—Ç—á—ë—Ç <strong>—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏</strong> —É–∂–µ&nbsp;
        –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å –æ&nbsp;–Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã: –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –¥–∞—Ç—É –∑–∞–Ω—è—Ç–∏—è
        –∏–ª–∏&nbsp;—É–∂–µ&nbsp;–ø—Ä–æ–≤–µ–ª–∏ –µ–≥–æ, –ª–∏–±–æ&nbsp;—Å–æ–≥–ª–∞—Å–æ–≤–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
        –∫–ª–∏–µ–Ω—Ç–∞
        <br></br>
        <br></br>
        <ul className={styles.customList}>
          <li>
            –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º —Å–¥–µ–ª–∞—Ç—å —Å–µ—Ä–≤–∏—Å –ª—É—á—à–µ –¥–ª—è&nbsp;–≤—Å–µ—Ö&nbsp;—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
          </li>
          <li>
            –ü–æ–≤—ã—à–∞–µ—Ç –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥ –∫–∞–∫&nbsp;–Ω–∞–¥—ë–∂–Ω–æ–≥–æ –∏&nbsp;–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
            —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
          </li>
        </ul>
      </div>

      <div className={componentStyles.containerFlxRw}>
        <button
          disabled={isLoading}
          className={buttonStyles.buttonYlw}
          onClick={handleCreateContract}
          type="button"
        >
          –î–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å
          {isLoading && (
            <div className={styles.buttonYlSpinner}>
              <Spinner />
            </div>
          )}
        </button>
        <button
          className={buttonStyles.buttonBlc}
          onClick={(e) => {
            e.preventDefault();
            dispatch(setIsModalCreateContractByTutor(false));
            dispatch(setIsSheetCreateContractByTutor(false));
            dispatch(setScrollY(0));
          }}
          type="button"
        >
          –ó–∞–∫—Ä—ã—Ç—å
        </button>
      </div>
    </>
  );
};
